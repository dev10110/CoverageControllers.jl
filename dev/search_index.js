var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = CoverageControllers","category":"page"},{"location":"#CoverageControllers","page":"Home","title":"CoverageControllers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for CoverageControllers.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [CoverageControllers]","category":"page"},{"location":"#CoverageControllers.Grid","page":"Home","title":"CoverageControllers.Grid","text":"Grid{D, T, F}\n\nRepresents a D-dimensional grid, with origin o, spacing along each axis of dx and N grid points along each axis.  The dct_plan is computed since it is used so frequently\n\n\n\n\n\n","category":"type"},{"location":"#CoverageControllers.Grid-Union{Tuple{T}, Tuple{D}, Tuple{Tuple{Vararg{T, D}}, Tuple{Vararg{T, D}}, Tuple{Vararg{Int64, D}}}} where {D, T}","page":"Home","title":"CoverageControllers.Grid","text":"Grid(o, dx, N)\n\nconstruct a grid with with origin o spacing dx and N elements along each axis. \n\n\n\n\n\n","category":"method"},{"location":"#CoverageControllers.Grid-Union{Tuple{T}, Tuple{D}, Tuple{Tuple{Vararg{T, D}}, Tuple{Vararg{T, D}}, Tuple{Vararg{T, D}}}} where {D, T}","page":"Home","title":"CoverageControllers.Grid","text":"Grid(origin, dx, lengths)\n\nconstruct a grid with origin o spacing dx and lengths lengths along each axis.\n\n\n\n\n\n","category":"method"},{"location":"#Base.axes-Union{Tuple{D}, Tuple{Grid{D}, Any}} where D","page":"Home","title":"Base.axes","text":"axes(grid, dim)\n\nreturns the axes for the grid at the specified dim\n\n\n\n\n\n","category":"method"},{"location":"#Base.axes-Union{Tuple{Grid{D}}, Tuple{D}} where D","page":"Home","title":"Base.axes","text":"axes(grid)\n\nreturns an ntuple of the axes along each dimension of the grid\n\n\n\n\n\n","category":"method"},{"location":"#CoverageControllers.PolygonBoundary-Union{Tuple{VP}, Tuple{P}, Tuple{F}, Tuple{D}} where {D, F, P<:Tuple{Vararg{F, D}}, VP<:AbstractVector{P}}","page":"Home","title":"CoverageControllers.PolygonBoundary","text":"PolygonBoundary(points) returns a Vector{LineBounary} representing a polygonal boundary\n\n\n\n\n\n","category":"method"},{"location":"#CoverageControllers.center-Union{Tuple{Grid{D}}, Tuple{D}} where D","page":"Home","title":"CoverageControllers.center","text":"center(grid)\n\nreturns the center of the grid\n\n\n\n\n\n","category":"method"},{"location":"#CoverageControllers.dct_trajectory-Tuple{Grid{2}, Any}","page":"Home","title":"CoverageControllers.dct_trajectory","text":"dct_trajectory(grid, traj)\n\nconverts a list of visited points to a spatial distribution, and then returns the dct of the spatial distribution\n\n\n\n\n\n","category":"method"},{"location":"#CoverageControllers.fill!-Union{Tuple{F}, Tuple{D}, Tuple{Any, Grid{D}, Array{F, D}}} where {D, F}","page":"Home","title":"CoverageControllers.fill!","text":"fill!(func, grid, data)\n\nfills the data matrix by applying func to each pos. func should be a function that takes in a position (as an n-tuple) and return a scalar. \n\n\n\n\n\n","category":"method"},{"location":"#CoverageControllers.lengths-Union{Tuple{Grid{D}}, Tuple{D}} where D","page":"Home","title":"CoverageControllers.lengths","text":"lengths(grid)\n\nreturns the length of each axis of the grid\n\n\n\n\n\n","category":"method"},{"location":"#CoverageControllers.trajectory_map-Tuple{Grid, Any}","page":"Home","title":"CoverageControllers.trajectory_map","text":"trajectory_map(grid, traj)\n\nconvert a list of visited points to a spatial distribution\n\n\n\n\n\n","category":"method"}]
}
